Oral question:

Why do we use abstract syntax trees to determine the correctness of semantics and why does this tree representation help?
Why do we use symbol tables?

Aspects of answer I expect:

Mastery:

while converting parse tree to ast, the tree is modified so that evaluation of expressions becomes easy as operators will
be the root node for that sub tree. Also for assign operators its easy to compare the types of left side and right side 
of the assign operator which eases the semantic check. Also size of AST is less compared to parse tree which reduces the
time required for traversal.

symbol tables help in knowing the scope,type and value of the variable along with its existence. So, while we use these
variables at various places like globally, or inside functions, we know particularly which variable to access and in which
symbol table. The student should also know that for each function scope we create a separate symbol table, so at the end
it will be hash table of tables.

Acceptable understanding : 

Student knows how to use the abstract syntax tree and compute further steps, but may not know why this type of tree representation
helps in semantic check and execution.

student should know why and how to use symbol tables, since this is a crucial step.

Insufficient understanding:

Student may know how to modify ast and compute the next steps, but doesn't know why this step exists and its importance which
signifies his programming skills but not his understanding of the subject.

Similarly, he is able to compute a single level symbol table, but doesn't know that symbol table is to keep the details of
the variables along with their function scopes. 